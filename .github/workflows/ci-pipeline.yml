name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
      - name: Build with Docker Compose
        run: |
          cp .env-example .env
          docker-compose build

  test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
      - name: Run Docker Compose and Tests
        run: |
          cp .env-example .env
          docker-compose up -d
          docker-compose ps
          docker-compose run api go test tests/*.go -v

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s latest
          mv ./bin/golangci-lint /usr/local/bin/
      - name: Run GolangCI Lint
        run: golangci-lint run --timeout 10m
